# Maintainer: Martchus <martchus@gmx.net>
# Contributor: cpasjuste <cpasjuste@gmail.com>

_android_arch=aarch64
_android_platform_arch=arch-arm64
_pkgname=openssl
_ver=1.1.1i
_patchname=15-android_conf

pkgname=android-$_android_arch-$_pkgname
# use a pacman compatible version scheme
pkgver=${_ver/[a-z]/.${_ver//[0-9.]/}}
pkgrel=2
pkgdesc="The Open Source toolkit for Secure Sockets Layer and Transport Layer Security (Android, $_android_arch)"
arch=('any')
url='https://www.openssl.org'
license=('custom:BSD')
options=('!strip' '!buildflags' 'staticlibs' '!emptydirs')
depends=('android-sdk' 'android-ndk')
makedepends=('android-environment' 'android-sdk-build-tools')
groups=('android-${_android_arch}-portlibs')
source=("https://www.openssl.org/source/${_pkgname}-${_ver}.tar.gz"
       "${_patchname}.patch")
sha256sums=('e8be6a35fe41d10603c3cc635e93289ed00bf34b79671a3a4de64fcee00d5242'
            '8ed3b78e8d6e5766595ae5ad6503cf0d21de4300d90aae556c7786f07ed9fdfb')

build() {
  cd "${srcdir}/${_pkgname}-${_ver}"
  source /opt/pacbrew/android/android-env.sh ${_android_arch}
  export PATH="${ANDROID_TOOLCHAIN}/bin:${PATH}"

  # Configure configuration script for android that shipped with openssl
  # 1.1.1i does not account for the removal of the $ndk/platforms directory in
  # android-ndk r22.
  patch -Np1 < "${srcdir}/${_patchname}.patch"

  # don't use -mandroid flag (Clang as provided by the NDK does not like it)
  sed -i -e 's/-mandroid//' Configurations/15-android.conf

  ./Configure \
    --prefix="${ANDROID_PREFIX}" \
    --openssldir="${ANDROID_PREFIX}" \
    -D__ANDROID_API__="${ANDROID_MINIMUM_PLATFORM}" \
    -Wl,--no-allow-shlib-undefined \
    -Wl,--no-undefined \
    no-stdio \
    no-ui-console \
    threads \
    no-shared \
    android-${_android_platform_arch##arch-}

  # get rid of debug printing so the library doesn't depend on stdio (no-stdio and no-ui are not entirely sufficient)
  sed -i -e 's/\#define TEST_ENG_OPENSSL_RC4_P_INIT//' crypto/engine/eng_openssl.c

  # build only libraries
  # note: Setting SHLIB_EXT in accordance with qtbase/src/network/ssl/qsslsocket_openssl_symbols.cpp to avoid loading
  #       system library.
  make depend
  make $MAKEFLAGS CALC_VERSIONS="SHLIB_COMPAT=; SHLIB_SOVER=" SHLIB_VERSION_NUMBER= SHLIB_EXT=_1_1.so build_libs
}

package() {
  cd "$srcdir/$_pkgname-$_ver"
  source /opt/pacbrew/android/android-env.sh ${_android_arch}
  export PATH="$ANDROID_TOOLCHAIN:$PATH"

  # install header files, libraries and license
  install -d "$pkgdir/${ANDROID_PREFIX_LIB}/"
  install -D -m0644 libcrypto.a "$pkgdir/${ANDROID_PREFIX_LIB}/"
  install -D -m0644 libssl.a "$pkgdir/${ANDROID_PREFIX_LIB}/"
  for pc in libcrypto.pc libssl.pc openssl.pc; do
    install -D -m0644 $pc "$pkgdir/${ANDROID_PREFIX_LIB}/pkgconfig/$pc"
  done
  mkdir -p "$pkgdir/${ANDROID_PREFIX_INCLUDE}"
  cp -r include/openssl "$pkgdir/${ANDROID_PREFIX_INCLUDE}"

  # strip binaries
  find "$pkgdir" -name 'lib*.a' -type f -exec "$ANDROID_STRIP" -g {} \;
}
